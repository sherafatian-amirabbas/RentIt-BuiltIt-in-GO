version: "3.7"

services:
  postgres:
    build: 
        context: ./assets/postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    image: postgres_image
    container_name: postgres_container
    ports:
      - 55554:5432
  zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    expose:
    - "2181"
    ports:
    - "2181:2181"
  
  kafka:
    image: wurstmeister/kafka
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CONNECT_BOOTSTRAP_SERVERS=localhost:9092
      - KAFKA_CONNECT_REST_PORT=8082
      - KAFKA_CONNECT_REST_ADVERTISED_HOST_NAME="kafka"
      - KAFKA_CONNECT_KEY_CONVERTER="org.apache.kafka.connect.json.JsonConverter"
      - KAFKA_CONNECT_VALUE_CONVERTER="org.apache.kafka.connect.json.JsonConverter"
      - KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=0
      - KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=0
      - KAFKA_CONNECT_INTERNAL_KEY_CONVERTER="org.apache.kafka.connect.json.JsonConverter"
      - KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER="org.apache.kafka.connect.json.JsonConverter"
      - KAFKA_CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE=0
      - KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE=0
      - KAFKA_CONNECT_OFFSET_STORAGE_FILE_FILENAME="/tmp/connect.offsets"
      # Flush much faster than normal, which is useful for testing/debugging
      - KAFKA_CONNECT_OFFSET_FLUSH_INTERVAL_MS=1000
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER=DEBUG
      - GROUP_ID=1
      - KAFKA_CREATE_TOPICS=unpaidInvoices:1:1 # topic:partition:replicas
    depends_on:
    - zookeeper
    ports:
    - '9092:9092'
    - '8082:8082'
    - '8083:8083'

  rentit:
    build:
      context: .
      target: api
    environment:
      postgresConnectionString: dbname=postgres host=postgres_container password=postgres user=postgres sslmode=disable port=5432
      kafkaUrl: kafka:9092
    image: rentit
    ports: 
      - 8081:8081
    container_name: rentit_container
    depends_on: 
      - postgres
      - kafka

  rentit-test:
    build: 
        context: .
        target: test
    image: rentit-test
    environment:
      httpUrl: http://rentit:8081
      kafkaUrl: kafka:9092
    container_name: rentit-test_container
    depends_on: 
      - rentit
    # Overrides default entrypoint and have to duplicate entrypoint command here. 
    # Because test should be run after api server is started
    entrypoint: ["/bin/sh"] 
    command: ./wait-for -t 60 rentit:8081 -- go test ./test...

